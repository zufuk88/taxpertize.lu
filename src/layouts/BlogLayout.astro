---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

export interface Props {
  title: string;
  description?: string;
  author?: string;
  date?: string;
  category?: string;
  readTime?: string;
  image?: string;
}

const {
  title,
  description = "Taxpertize Blog - Tax insights and updates from Luxembourg",
  author,
  date,
  category,
  readTime,
  image
} = Astro.props;

const formattedDate = date ? new Date(date).toLocaleDateString('en-GB', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
}) : '';
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Preconnect to Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>

    <!-- Google Font: Playfair Display (Times New Roman equivalent) -->
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600;700;800;900&display=swap" rel="stylesheet">

    <!-- Global Styles -->
    <link rel="stylesheet" href="/src/styles/global.css" />

    <meta name="generator" content={Astro.generator} />
    <title>{title} | Taxpertize Blog</title>

    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={image} />}
    <meta property="og:type" content="article" />
  </head>
  <body>
    <Header />

    <article class="blog-article">
      <div class="container">
        {(author || date || category || readTime) && (
          <header class="article-header">
            <div class="article-meta">
              {category && (
                <a href={`/blog/category/${category.toLowerCase().replace(/\s+/g, '-')}`} class="article-category">
                  {category}
                </a>
              )}
              {date && <span class="article-date">{formattedDate}</span>}
              {readTime && <span class="article-read-time">{readTime} read</span>}
            </div>
            <h1 class="article-title">{title}</h1>
            {description && <p class="article-description">{description}</p>}
            {author && (
              <div class="article-author">
                <span>By {author}</span>
              </div>
            )}
          </header>
        )}

        <div class="article-content">
          <slot />
        </div>
      </div>
    </article>

    <Footer />
  </body>
</html>

<style>
  .blog-article {
    padding: var(--space-sm) 0;
    min-height: 70vh;
  }

  .article-header {
    max-width: 800px;
    margin: 0 auto var(--space-3xl) auto;
    text-align: center;
    position: relative;
    padding: var(--space-md) var(--space-xl) var(--space-xl) var(--space-xl);
    background: white;
    overflow: hidden;
  }

  .article-header::before {
    content: '';
    position: absolute;
    top: 50%;
    left: -20%;
    width: 140%;
    height: 100%;
    background:
      linear-gradient(45deg, transparent 30%, rgba(255, 165, 0, 0.03) 30%, rgba(255, 165, 0, 0.03) 35%, transparent 35%),
      linear-gradient(-45deg, transparent 40%, rgba(255, 140, 0, 0.02) 40%, rgba(255, 140, 0, 0.02) 43%, transparent 43%),
      linear-gradient(90deg, transparent 45%, rgba(255, 180, 0, 0.015) 45%, rgba(255, 180, 0, 0.015) 47%, transparent 47%);
    transform: rotate(15deg);
    pointer-events: none;
  }

  .article-header::after {
    content: '';
    position: absolute;
    bottom: -30%;
    right: -25%;
    width: 150%;
    height: 150%;
    background-image:
      repeating-linear-gradient(120deg, rgba(255, 165, 0, 0.02) 0px, transparent 1px, transparent 20px, rgba(255, 165, 0, 0.02) 21px),
      repeating-linear-gradient(60deg, rgba(255, 140, 0, 0.015) 0px, transparent 1px, transparent 25px, rgba(255, 140, 0, 0.015) 26px);
    transform: rotate(-10deg);
    pointer-events: none;
  }

  /* Floating geometric shapes */
  .article-header > * {
    position: relative;
    z-index: 1;
  }


  .article-meta {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: var(--space-md);
    margin-bottom: var(--space-lg);
    flex-wrap: wrap;
  }

  .article-category {
    display: inline-block;
    padding: 4px 12px;
    background: linear-gradient(135deg, rgba(255, 165, 0, 0.1), rgba(255, 140, 0, 0.05));
    border: 1px solid rgba(255, 165, 0, 0.2);
    color: var(--color-primary);
    font-size: var(--font-size-sm);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-radius: var(--radius-sm);
    text-decoration: none;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .article-category::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 165, 0, 0.2), transparent);
    transition: left 0.5s ease;
  }

  .article-category:hover::before {
    left: 100%;
  }

  .article-category:hover {
    background: linear-gradient(135deg, rgba(255, 165, 0, 0.15), rgba(255, 140, 0, 0.1));
    border-color: rgba(255, 165, 0, 0.3);
    transform: translateY(-2px);
  }

  .article-date,
  .article-read-time {
    font-size: var(--font-size-sm);
    color: var(--color-text-light);
  }

  .article-title {
    font-size: clamp(2rem, 5vw, 3.5rem);
    font-weight: 900;
    color: var(--color-primary);
    margin-bottom: var(--space-md);
    line-height: 1.2;
    position: relative;
    display: inline-block;
  }

  /* Decorative accent line under title */
  .article-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: linear-gradient(90deg, transparent, rgba(255, 165, 0, 0.6), transparent);
    border-radius: 2px;
  }

  .article-description {
    font-size: var(--font-size-xl);
    color: var(--color-text-light);
    line-height: 1.6;
    margin-bottom: var(--space-lg);
  }

  .article-author {
    font-size: var(--font-size-base);
    color: var(--color-text);
    font-weight: 500;
  }

  .article-content {
    max-width: 800px;
    margin: 0 auto;
  }

  .article-content :global(h2) {
    font-size: var(--font-size-2xl);
    color: var(--color-primary);
    margin: var(--space-xl) 0 var(--space-lg) 0;
  }

  .article-content :global(h3) {
    font-size: var(--font-size-xl);
    color: var(--color-primary);
    margin: var(--space-lg) 0 var(--space-md) 0;
  }

  .article-content :global(p) {
    line-height: 1.8;
    margin-bottom: var(--space-md);
  }

  .article-content :global(ul),
  .article-content :global(ol) {
    margin-bottom: var(--space-md);
    padding-left: var(--space-lg);
  }

  .article-content :global(li) {
    margin-bottom: var(--space-sm);
    line-height: 1.8;
  }

  .article-content :global(blockquote) {
    border-left: 4px solid var(--color-primary);
    padding-left: var(--space-lg);
    margin: var(--space-lg) 0;
    font-style: italic;
    color: var(--color-text-light);
  }

  .article-content :global(code) {
    background: var(--color-accent-light);
    padding: 2px 6px;
    border-radius: var(--radius-sm);
    font-size: 0.9em;
  }

  .article-content :global(pre) {
    background: var(--color-accent-light);
    padding: var(--space-md);
    border-radius: var(--radius-md);
    overflow-x: auto;
    margin-bottom: var(--space-md);
  }

  /* Mobile Responsive */
  @media (max-width: 640px) {

    .article-header {
      margin-bottom: var(--space-2xl);
    }

    .article-title {
      font-size: clamp(1.75rem, 6vw, 2.5rem);
    }

    .article-description {
      font-size: var(--font-size-lg);
    }
  }
</style>